[build-system]
requires = ["setuptools>=61.0", "wheel", "numpy", "pythran", "transonic>=0.4.0"]
build-backend = "setuptools.build_meta"

[project]
name = "pylandstats"
version = "3.0.0rc0"
description = "Computing landscape metrics in the Python ecosystem."
readme = "README.md"
authors = [
    { name = "MartÃ­ Bosch", email = "marti.bosch@epfl.ch" },
]
license = { text = "GPL-3.0" }
classifiers = [
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.8"
dependencies = [
    "black",
    "geopandas",
    "matplotlib >= 2.2",
    "numba ; platform_system == 'Windows'",
    "numpy >= 1.15",
    "pandas >= 0.23",
    "rasterio >= 1.0.0",
    "scipy >= 1.0.0",
    "transonic >= 0.4.0"
]

[project.urls]
Repository = "https://github.com/martibosch/pylandstats"

[project.optional-dependencies]
test = ["black", "coverage[toml]", "pytest", "pytest-cov", "python-dotenv", "ruff"]
dev = ["build", "commitizen", "pre-commit", "pip", "toml", "tox", "twine"]
doc = ["m2r2", "pydata-sphinx-theme", "sphinx"]

[tool.setuptools.packages.find]
include = ["pylandstats", "pylandstats.*"]

[tool.black]
line-length = 88

[tool.ruff]
line-length = 88
select = ["D", "E", "F", "I"]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.isort]
known-first-party = ["pylandstats"]

[tool.ruff.per-file-ignores]
"**/__init__.py" = ["F403"]
"pylandstats/landscape.py" = ["D401"]  # for metric docstrings
"tests/test_pylandstats.py" = ["D"]

[tool.coverage.run]
source = ["pylandstats"]

[tool.coverage.report]
exclude_lines = [
    "if self.debug:",
    "pragma: no cover",
    "raise NotImplementedError",
    "except ModuleNotFoundError",
    "except ImportError",
]
ignore_errors = true
omit = ["tests/*", "docs/conf.py"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_provider = "pep621"
version_files = [
    "pylandstats/__init__.py",
    "pyproject.toml:version"
]

[tool.cibuildwheel]
build = ["cp38-*", "cp39-*", "cp310-*", "cp311-*"]
skip = "*-musllinux_i686"
